DATA:
  data_root: "data/coco"
  train_list: "lists/coco/train_list.json"
  val_list: "lists/coco/val_list.json"
  classes: 2

TRAIN:
  num_unlabel: 2
  layers: 50
  sync_bn: False
  train_h: 473
  train_w: 473
  val_size: 473
  hidden_dims: 256 # DFattn friendly
  scale_min: 0.8  # minimum random scale
  scale_max: 1.25 # maximum random scale
  rotate_min: -10  # minimum random rotate
  rotate_max: 10  # maximum random rotate
  ignore_label: 255
  padding_label: 255
  aux_weight: 1.0
  un_weight: 0.5
  train_gpu: [0,1,2,3]  # If only one gpu is used, batch size can be set to 8 and base_lr should be 0.005.
  workers: 2  # data loader workers
  batch_size: 2  # batch size for training.
  batch_size_val: 1 # this version of code only support val batch = 1
  base_lr: 0.01
  epochs: 50
  start_epoch: 0
  power: 0.9 # 0 means no decay
  momentum: 0.9
  weight_decay: 0.0001
  manual_seed: 321
  print_freq: 5
  save_freq: 20
  save_path: expinicoco/coco/split3_resnet50/model
  weight:  
  resume:
  evaluate: True
  split: 3
  shot: 1
  with_transformer: True 
  fix_random_seed_val: True
  warmup: False
  use_coco: True
  use_split_coco: True
  resized_val: True
  ori_resize: True  # use original label for evaluation

## deprecated multi-processing training
Distributed:
  dist_url: tcp://127.0.0.1:6789
  dist_backend: 'nccl'
  multiprocessing_distributed: False
  world_size: 1
  rank: 0
  use_apex: False
  opt_level: 'O0'
  keep_batchnorm_fp32:
  loss_scale:



